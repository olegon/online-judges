int main (void) { int casos; scanf("%d\n", &casos); while (casos-- > 0) { int quantidadeDeVagoes, vagoes[QUANTIDADE_MAXIMA_DE_VAGOES], i, passos = 0; scanf("%d", &quantidadeDeVagoes); for (i = 0; i < quantidadeDeVagoes; i++) { scanf("%d", vagoes + i); } passos = 0; for (i = 0; i < quantidadeDeVagoes; i++) { int vagaoProcurado = i + 1; if (vagoes[i] == vagaoProcurado) { continue; } int j; for (j = quantidadeDeVagoes - 1; j > i; j--) { if (vagoes[j] == vagaoProcurado) { int vagao = vagoes[j]; vagoes[j] = vagoes[j - 1]; vagoes[j - 1] = vagao; passos++; } } } printf("Optimal train swapping takes %d swaps.\n", passos); } return 0; }
int main (void) { int alturaDoPuloDoSapo, quantidadeDeCanos, diferenca, canos[QUANTIDADE_MAXIMA_DE_CANOS], i; scanf("%d %d", &alturaDoPuloDoSapo, &quantidadeDeCanos); for (i = 0; i < quantidadeDeCanos; i++) { scanf("%d", &canos[i]); } for (i = 1; i < quantidadeDeCanos; i++) { diferenca = canos[i] - canos[i - 1]; if (ABS(diferenca) > alturaDoPuloDoSapo) { printf("GAME OVER\n"); return 0; } } printf("YOU WIN\n"); return 0; }
int main (void) { int casos; RESULTADO resultado; char    ataqueDoJogador01[STRING_SIZE], ataqueDoJogador02[STRING_SIZE]; scanf("%d\n", &casos); while (casos-- > 0) { scanf("%s\n%s\n", ataqueDoJogador01, ataqueDoJogador02); resultado = jogar(ataqueDoJogador01, ataqueDoJogador02); imprimirResultado(resultado); } return 0; }
int semana (void ){int valor;printf ("Digite um valor de 1 a 7: ");scanf("%d", &valor);switch ( valor ){case 1 :{printf ("Domingo\n");break;}case 2 :{printf ("Segunda\n");break;}case 3 :{printf ("Ter√ßa\n");break;}case 4 :{printf ("Quarta\n");break;}case 5 :{printf ("Quinta\n");break;}case 6 :{printf ("Sexta\n");break;}case 7 :{printf ("Sabado\n");break;}default :{printf ("Valor invalido!\n");}}for (int a = 3; a < 10; a++) { getch();}return 0;}
